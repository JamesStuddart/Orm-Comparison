//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrmComparison.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ORMTestEntities : DbContext
    {
        public ORMTestEntities()
            : base("name=ORMTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int ExecuteNonQuery(ObjectParameter outputData, Nullable<int> intData, Nullable<System.Guid> guidData, string stringData, Nullable<bool> boolData, Nullable<System.DateTime> dateData)
        {
            var intDataParameter = intData.HasValue ?
                new ObjectParameter("IntData", intData) :
                new ObjectParameter("IntData", typeof(int));
    
            var guidDataParameter = guidData.HasValue ?
                new ObjectParameter("GuidData", guidData) :
                new ObjectParameter("GuidData", typeof(System.Guid));
    
            var stringDataParameter = stringData != null ?
                new ObjectParameter("StringData", stringData) :
                new ObjectParameter("StringData", typeof(string));
    
            var boolDataParameter = boolData.HasValue ?
                new ObjectParameter("BoolData", boolData) :
                new ObjectParameter("BoolData", typeof(bool));
    
            var dateDataParameter = dateData.HasValue ?
                new ObjectParameter("DateData", dateData) :
                new ObjectParameter("DateData", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExecuteNonQuery", outputData, intDataParameter, guidDataParameter, stringDataParameter, boolDataParameter, dateDataParameter);
        }
    
        public virtual ObjectResult<GetAllRecords_Result> GetAllRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRecords_Result>("GetAllRecords");
        }
    
        public virtual ObjectResult<GetSingleRecord_Result> GetSingleRecord(Nullable<int> intData)
        {
            var intDataParameter = intData.HasValue ?
                new ObjectParameter("IntData", intData) :
                new ObjectParameter("IntData", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSingleRecord_Result>("GetSingleRecord", intDataParameter);
        }
    }
}
